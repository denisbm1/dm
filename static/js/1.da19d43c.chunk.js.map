{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_Home_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Home_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Home_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Home_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Home_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","dialogs","dialogsitems","active","messages","DialogItem","path","id","react_default","className","s","dialog","react_router_dom","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","newMessageBody","values","sendMessage","react_router","compose","dispatch","sendMessageCreator"],"mappings":"qMAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGTE,EAAiB,SAACC,GAAa,IACnCC,EADmC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGrC,OAAIR,KAAKS,MAAMjB,OACRkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OADGC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAHNlB,EAAA,CACTmB,IAAMpB,WAWtC,OAHqCqB,YAAQ1B,EAAR0B,CAAoCpB,yBChB7EqB,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,kHCaHC,EATI,SAACd,GAChB,IAAIe,EAAM,YAAcf,EAAMgB,GAC9B,OACIC,EAAAf,EAAAC,cAAA,OAAKe,UAAWC,IAAEC,OAAS,IAAMD,IAAEP,QAC/BK,EAAAf,EAAAC,cAACkB,EAAA,EAAD,CAAShB,GAAIU,GAAOf,EAAMsB,QCIvBC,EARA,SAACvB,GACZ,OACIiB,EAAAf,EAAAC,cAAA,OAAKe,UAAWC,IAAEC,QAASpB,EAAMwB,2DCoCnCC,EAAYC,YAAiB,IAc7BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,CAbN,SAAC5B,GACnB,OACIiB,EAAAf,EAAAC,cAAA,QAAM2B,SAAU9B,EAAM+B,cAClBd,EAAAf,EAAAC,cAAA,WACIc,EAAAf,EAAAC,cAAC6B,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,wBAE7CpB,EAAAf,EAAAC,cAAA,WAAKc,EAAAf,EAAAC,cAAA,0BAOFmC,EA/CC,SAACtC,GACb,IAAIlB,EAAQkB,EAAMuC,YAEdC,EAAkB1D,EAAM4B,QAAQ+B,IAAK,SAAAC,GAAC,OAAIzB,EAAAf,EAAAC,cAACwC,EAAD,CAAYrB,KAAMoB,EAAEpB,KAAMxB,IAAK4C,EAAE1B,GAAIA,GAAI0B,EAAE1B,OAErF4B,EAAmB9D,EAAM+B,SAAS4B,IAAK,SAAAI,GAAC,OAAI5B,EAAAf,EAAAC,cAAC2C,EAAD,CAAStB,QAASqB,EAAErB,QAAS1B,IAAK+C,EAAE7B,OAE/DlC,EAAMiE,eAU/B,OAAK/C,EAAMjB,OAGHkC,EAAAf,EAAAC,cAAA,OAAKe,UAAWC,IAAET,SACdO,EAAAf,EAAAC,cAAA,OAAKe,UAAYC,IAAER,cACd6B,GAELvB,EAAAf,EAAAC,cAAA,OAAKe,UAAWC,IAAEN,UACdI,EAAAf,EAAAC,cAAA,WAAMyC,IAEV3B,EAAAf,EAAAC,cAACwB,EAAD,CAAqBG,SAdd,SAACkB,GACjBhD,EAAMiD,YAAYD,EAAOD,oBAGF9B,EAAAf,EAAAC,cAAC+C,EAAA,EAAD,CAAU7C,GAAG,oCCGxB8C,4BACX5C,YApBkB,SAACzB,GACnB,MAAO,CACHyD,YAAazD,EAAMyD,cAKF,SAACa,GAEtB,MAAO,CACHH,YAAa,SAACF,GAEVK,EAASC,YAAmBN,QASpC9D,IAFWkE,CAGbb","file":"static/js/1.da19d43c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport  const withAuthRedirect=(Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n    render (){\r\n        if(!this.props.isAuth) return <Redirect to='/login'/>\r\n        return <Component {...this.props}/>\r\n    }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n        }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hlaY\",\"dialogsitems\":\"Dialogs_dialogsitems__35OW0\",\"active\":\"Dialogs_active__2UkIa\",\"messages\":\"Dialogs_messages__ePdzb\"};","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path ='/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Message =(props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id}/> )\r\n\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n\r\n\r\n\r\nlet addNewMessage =(values)=>{\r\n   props.sendMessage(values.newMessageBody);\r\n}\r\n\r\nif (!props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\nreturn (\r\n        <div className={s.dialogs}>\r\n            <div className= {s.dialogsitems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                 </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50=maxLengthCreator(50)\r\nconst AddMessageForm =(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n                </div>\r\n            <div><button >Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>\r\n{\r\n    return {\r\n        sendMessage: (newMessageBody) =>\r\n        {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}